Naman and Pankaj are playing a game.

Initially they have a binary string s consisting of only characters 0 and 1.

Naman and Pankaj make alternating moves: Naman makes the first move, Pankaj makes the second move, Naman makes the third one, and so on. During each move, the current player must choose two different adjacent characters of string s and delete them. For example, if s=1011001 then the following moves are possible:
delete s1 and s2: 1011001→11001;
delete s2 and s3: 1011001→11001;
delete s4 and s5: 1011001→10101;
delete s6 and s7: 1011001→10110.
If a player can't make any move, they lose. Both players play optimally. You have to determine if Naman can win.

Input
First line contains one integer t (1≤t≤1000) — the number of test cases.

Only line of each test case contains one string s (1≤|s|≤100), consisting of only characters 0 and 1.

Output
For each test case print answer in the single line.

If Naman can win print YES in any register. Otherwise print NO in any register.

Example

Input:
3
01
1111
0011

Output:
YES
NO
NO

Note:
In the first test case after Naman's move string s become empty and Pankaj can not make any move.

In the second test case Naman can not make any move initially.

In the third test case after Alice's move string s turn into 01. Then, after Bob's move string s become empty and Alice can not make any move.